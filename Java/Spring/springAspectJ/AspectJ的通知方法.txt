AspectJ进一步简化了传统aop的通知方法：

步骤：（xml配置）
    -1.配置目标类，要增强的方法所在类（在使用此类的增强方法时，只需要注入的时候添加注释：@Resource(name="customerDao")）
            <bean id="customerDao" class="AspectJXML.CustomerDaoImpl"/>

    -2.配置切面类，即增强方法所在的类
            <bean id="myAspectXML" class="AspectJXML.MyAspectXML"/>

    -3.AOP相关配置：
        1）.将需要增强的切点（execution）通过pointcut进行重新命名
        2）.对每个pointcut设置要增强的方式method
            <aop:config>
                <aop:pointcut id="pointcut_1" expression="execution(* AspectJXML.CustomerDao.save(..))"/>
                <aop:pointcut id="pointcut_2" expression="execution(* AspectJXML.CustomerDao.update(..))"/>
                <aop:pointcut id="pointcut_3" expression="execution(* AspectJXML.CustomerDao.find(..))"/>
                <aop:pointcut id="pointcut_4" expression="execution(* AspectJXML.CustomerDao.delete(..))"/>

                <aop:aspect ref="myAspectXML">
                    <aop:before method="before" pointcut-ref="pointcut_1"/>
                    <aop:after-returning method="afterReturning" pointcut-ref="pointcut_2" returning="hi"/>
                    <aop:around method="around" pointcut-ref="pointcut_3"/>
                    <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut_3" throwing="e"/>
                    <aop:after method="after" pointcut-ref="pointcut_4"/>
                </aop:aspect>
            </aop:config>