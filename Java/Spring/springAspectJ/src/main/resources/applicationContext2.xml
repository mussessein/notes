<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--XML方式aop开发-->

    <!--配置目标类-->
    <bean id="customerDao" class="AspectJXML.CustomerDaoImpl"/>

    <!--配置切面类-->
    <bean id="myAspectXML" class="AspectJXML.MyAspectXML"/>

    <!--aop的相关配置-->
    <aop:config>
        <!--选择一个切点，为其命名-->
        <aop:pointcut id="pointcut_1" expression="execution(* AspectJXML.CustomerDao.save(..))"/>
        <aop:pointcut id="pointcut_2" expression="execution(* AspectJXML.CustomerDao.update(..))"/>
        <aop:pointcut id="pointcut_3" expression="execution(* AspectJXML.CustomerDao.find(..))"/>
        <aop:pointcut id="pointcut_4" expression="execution(* AspectJXML.CustomerDao.delete(..))"/>

        <!--aop:aspect引入切面，可以有多个切入点,内部可以设置各种通知-->
        <aop:aspect ref="myAspectXML">
            <aop:before method="before" pointcut-ref="pointcut_1"/>
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut_2" returning="hi"/>
            <aop:around method="around" pointcut-ref="pointcut_3"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut_3" throwing="e"/>
            <aop:after method="after" pointcut-ref="pointcut_4"/>
        </aop:aspect>
    </aop:config>




</beans>