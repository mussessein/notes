package DataStructure.Hash;
/*
最简单的哈希表：LeetCode 387
1.哈希表：（空间换时间）：
        假如空间可以无限大，可以将所有身份证号码存储在一个数组中，就可以实现O（1）的复杂度查找任意一个人（通过数组随即访问）
        假如空间很小，用链表实现存储每个人的信息，复杂度就会提升到O（n），时间需要很多
2.哈希表就实现了空间和时间的平衡。
3.取模：开辟的哈希表的空间
4.哈希函数：将键值对中的key，当成一个索引，通过索引查找到对应的value
         这个key可以是任何值，通过一种函数方法，将key设定为一个唯一的值

5.Object对象，每个对象会根据对象的地址信息，生成哈希值
6.哈希冲突：哈希值相同，就会在同一个数组地址下以链表（java8之前）的形式，存储
            java 8之后，哈希冲突达到一定程度，会把链表转化为红黑树(TreeMap)
 */
public class Hash {


}
