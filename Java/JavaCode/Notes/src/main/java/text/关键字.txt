1.final:
    (1)数据
        -声明数据为final
        -对于基本类型，final使得数值不变
        -对于引用类型，final使其引用不能改变，也就是不能引用其他对象，但是被引用的对象本身可以修改
    (2)方法：
        -声明方法不能被子类重写
        -private方法隐式地被指定为final
            如果在子类中定义的方法和基类中的一个 private 方法签名相同，
            此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。
    (3)类：
        -声明类不允许被继承。

2.static：
    (1)静态变量：
        -又称为类变量，也就是说这个变量属于类的，
         类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。
        -实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死
    (2)静态方法：
        -静态方法在类加载的时候就存在了，它不依赖于任何实例。
         所以静态方法必须有实现，也就是说它不能是抽象方法！！！
        -只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字。
        （即：静态方法内不能访问非静态属性，也不能用this）
    (3)静态语句块；
        -静态语句块在类初始化时运行一次。
    (4)静态内部类；
        -非静态内部类依赖于外部类的实例，而静态内部类不需要。
        -静态内部类不能访问外部类的非静态的变量和方法
    (5)静态导包：
        -在使用静态变量和方法时不用再指明 ClassName，从而简化代码，但可读性大大降低。
    (6)初始化顺序：
        -静态变量和静态语句块优先于实例变量和普通语句块
         静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。

        -在继承结构中的初始化顺序：
            父类（静态变量、静态语句块）
            子类（静态变量、静态语句块）
            父类（实例变量、普通语句块）
            父类（构造函数）
            子类（实例变量、普通语句块）
            子类（构造函数）