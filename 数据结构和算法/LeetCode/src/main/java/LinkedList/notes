技巧总结：
1. 使用辅助头节点
   ListNode dummy = new ListNode(0);
   dummy.next = head;
2. 双指针法（快慢指针）

链表题分类：
1. 反转单链表
   三指针：pre，cur，next
   pre：保存前一节点
   cur：当前节点，每次结束，赋值给pre
   next：每次结束，赋值给cur
2. 链表去重
   (1)保留重复节点:利用一前一后双指针，不能比较两个指针；
   (2)不保留重复节点：需要dummy，因为第一个节点就可能是重复节点，再利用双指针；
3. 链表排序
   (1)快慢指针分割链表，归并思想——排序合并两个链表
4. 链表删除指定节点
   (1)原地遍历删除
5. 删除倒数第N节点
   (1)求出链表总长度len，需要辅助头节点——从辅助节点开始，到len-n，找到要删除的节点；
   (2)双指针法：设置p1,p2两个指针，首先p1移动k-1个点，然后p2和p1再一起移动，直到p1到达链表尾部，p2刚好是链表的倒数第k个节点；
6. 合并链表
   (1)合并有序链表：归并的思想；
   (2)合并无序链表：直接将两个链表合并，然后归并排序整个链表
7. 判断单链表是否有环？
   (1)快慢指针
   (2)使用HashMap\HashSet
8. 判断单链表是否有环，并找出环的入口节点
   (1)快慢指针（AB=CB）