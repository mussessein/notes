<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.userauth.mapper.AuthTokenMapper">
  <resultMap id="BaseResultMap" type="com.userauth.entity.AuthToken">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="access_token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="access_expire" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="token_timestamp" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_active" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, access_token, access_expire, token_timestamp, is_active, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.userauth.entity.AuthToken">
    insert into auth_token (id, user_id, access_token, 
      access_expire, token_timestamp, is_active, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{accessToken,jdbcType=VARCHAR}, 
      #{accessExpire,jdbcType=BIGINT}, #{tokenTimestamp,jdbcType=BIGINT}, #{isActive,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.userauth.entity.AuthToken">
    insert into auth_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="accessExpire != null">
        access_expire,
      </if>
      <if test="tokenTimestamp != null">
        token_timestamp,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="accessExpire != null">
        #{accessExpire,jdbcType=BIGINT},
      </if>
      <if test="tokenTimestamp != null">
        #{tokenTimestamp,jdbcType=BIGINT},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.userauth.entity.AuthToken">
    update auth_token
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="accessExpire != null">
        access_expire = #{accessExpire,jdbcType=BIGINT},
      </if>
      <if test="tokenTimestamp != null">
        token_timestamp = #{tokenTimestamp,jdbcType=BIGINT},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.userauth.entity.AuthToken">
    update auth_token
    set user_id = #{userId,jdbcType=INTEGER},
      access_token = #{accessToken,jdbcType=VARCHAR},
      access_expire = #{accessExpire,jdbcType=BIGINT},
      token_timestamp = #{tokenTimestamp,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="invalidateTokenByUser">
      UPDATE auth_token
      SET is_active=0
      WHERE id = #{id} AND is_active=1
    </update>

  <select id="selectByAccessToken" resultType="com.userauth.entity.AuthToken">
    SELECT <include refid="Base_Column_List"/>
    FROM auth_token
    WHERE access_token = #{accessToken}
    AND is_active = 1
  </select>

  <update id="invalidateByToken">
    UPDATE auth_token
    SET is_active = 0,update_time=now()
    WHERE access_token = #{accessToken} AND is_active = 1
  </update>

  <delete id="deleteUnactiveToken">
    DELETE FROM auth_token
    WHERE is_active = 0
  </delete>
</mapper>